# Generated by Django 5.1.7 on 2025-03-27 17:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('staff', 'Faculty/Staff'), ('student', 'Student')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('institution_id', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='prototypes.department')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Prototype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField()),
                ('academic_year', models.CharField(max_length=9)),
                ('supervisor', models.CharField(max_length=100)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('archived', 'Archived')], default='draft', max_length=15)),
                ('has_physical_prototype', models.BooleanField(default=False)),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('storage_location', models.CharField(blank=True, max_length=100)),
                ('feedback', models.TextField(blank=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prototypes.department')),
                ('reviewer', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['staff', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_prototypes', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='prototypes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='PrototypeAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('report', 'Final Report'), ('source', 'Source Code'), ('presentation', 'Presentation'), ('dataset', 'Dataset'), ('documentation', 'Documentation'), ('other', 'Other')], max_length=15)),
                ('file', models.FileField(upload_to='prototype_attachments/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'odt', 'zip', 'rar', 'tar', 'gz', '7z', 'py', 'java', 'cpp', 'ppt', 'pptx', 'odp', 'key', 'csv', 'xls', 'xlsx', 'json', 'sql', 'db', 'md', 'txt', 'html', 'jpg', 'png', 'mp4', 'mov', 'stl', 'obj'])])),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('size', models.PositiveIntegerField(editable=False)),
                ('checksum', models.CharField(blank=True, editable=False, max_length=64)),
                ('prototype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='prototypes.prototype')),
            ],
            options={
                'verbose_name': 'Prototype Attachment',
                'verbose_name_plural': 'Prototype Attachments',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('download', 'Download'), ('review', 'Review')], max_length=10)),
                ('model', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['model', 'object_id'], name='prototypes__model_9eb461_idx'), models.Index(fields=['timestamp'], name='prototypes__timesta_0b67c6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='prototype',
            index=models.Index(fields=['status'], name='prototypes__status_dad88c_idx'),
        ),
        migrations.AddIndex(
            model_name='prototype',
            index=models.Index(fields=['barcode'], name='prototypes__barcode_9efb53_idx'),
        ),
        migrations.AddIndex(
            model_name='prototype',
            index=models.Index(fields=['academic_year'], name='prototypes__academi_a0f170_idx'),
        ),
    ]
